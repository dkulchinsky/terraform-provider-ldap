---
page_title: "Provider: ldap"
description: |-
---

# {{ .ProviderShortName | upper }} Provider

## Data Sources

The provider makes it possible to read all details about a single LDAP entry or about a set of LDAP entries.

This is done in a strict generic way: the details are accessible through the attribute `data_json`.

Attributes can be ignored by `ignore_attributes` or `ignore_attribute_patterns`.

Attributes can be restricted by `restrict_attributes`.

Attributes can be encoded base64 by `base64encode_attributes` or `base64encode_attribute_patterns`.

Since version v1.4 `dn` can be uses as alternative to `ou` and `filter`.

## Resources

The provider makes it possible to provide an LDAP entry. This can be used to create, modify, and delete LDAP entries.

This is done in a strict generic way: the details are specified through the attribute `data_json`.

## Why generic?

I am convinced that a terraform provider should match the structure of the API used.

The other perspective would be to match the structure of a specific LDAP service. 
The argument against is that LDAP services are generic tools with different characteristics.   

If you need specific structures, you can code them in terraform.
If you like to reuse these structures, you can implement a terraform module.

## Example Usage

{{ tffile "examples/provider/provider.tf" }}

{{ .SchemaMarkdown | trimspace }}